import type { JSX } from 'solid-js';
export interface DisclosureStateControlledOptions {
    isOpen: boolean;
    disabled?: boolean;
    onChange?: (state: boolean) => void;
    onClose?: () => void;
    onOpen?: () => void;
}
export interface DisclosureStateUncontrolledOptions {
    defaultOpen: boolean;
    disabled?: boolean;
    onChange?: (state: boolean) => void;
    onClose?: () => void;
    onOpen?: () => void;
}
export type DisclosureStateOptions = DisclosureStateControlledOptions | DisclosureStateUncontrolledOptions;
export interface DisclosureStateProperties {
    isOpen(): boolean;
    setState(newState: boolean): void;
    disabled(): boolean;
    close(): void;
    open(): void;
    toggle(): void;
}
export declare function createDisclosureState(options: DisclosureStateOptions): DisclosureStateProperties;
export interface DisclosureStateRenderProps {
    children?: JSX.Element | ((state: DisclosureStateProperties) => JSX.Element);
}
export interface DisclosureStateProviderProps extends DisclosureStateRenderProps {
    state: DisclosureStateProperties;
}
export declare function DisclosureStateProvider(props: DisclosureStateProviderProps): JSX.Element;
export declare function useDisclosureState(): DisclosureStateProperties;
export declare function DisclosureStateChild(props: DisclosureStateRenderProps): JSX.Element;
//# sourceMappingURL=create-disclosure-state.d.ts.map