import type { JSX } from 'solid-js';
export interface InputStateControlledOptions {
    value: string | undefined;
    disabled?: string;
    onChange?: (state?: string) => void;
}
export interface InputStateUncontrolledOptions {
    defaultValue: string | undefined;
    disabled?: boolean;
    onChange?: (state?: string) => void;
}
export type InputStateOptions = InputStateControlledOptions | InputStateUncontrolledOptions;
export interface InputStateProperties {
    value(): string | undefined;
    setState(newState?: string): void;
    disabled(): boolean;
}
export declare function createInputState(options: InputStateOptions): InputStateProperties;
export interface InputStateRenderProps {
    children?: JSX.Element | ((state: InputStateProperties) => JSX.Element);
}
export interface InputStateProviderProps extends InputStateRenderProps {
    state: InputStateProperties;
}
export declare function InputStateProvider(props: InputStateProviderProps): JSX.Element;
export declare function useInputState(): InputStateProperties;
export declare function InputStateChild(props: InputStateRenderProps): JSX.Element;
//# sourceMappingURL=create-input-state.d.ts.map