import type { JSX } from 'solid-js';
export interface CheckStateControlledOptions {
    checked: boolean | undefined;
    disabled?: boolean;
    onChange?: (state?: boolean) => void;
}
export interface CheckStateUncontrolledOptions {
    defaultChecked: boolean | undefined;
    disabled?: boolean;
    onChange?: (state?: boolean) => void;
}
export type CheckStateOptions = CheckStateControlledOptions | CheckStateUncontrolledOptions;
export interface CheckStateProperties {
    checked(): boolean | undefined;
    setState(newState?: boolean): void;
    disabled(): boolean;
    check(): void;
    uncheck(): void;
    reset(): void;
    toggle(): void;
}
export declare function createCheckState(options: CheckStateOptions): CheckStateProperties;
export interface CheckStateRenderProps {
    children?: JSX.Element | ((state: CheckStateProperties) => JSX.Element);
}
export interface CheckStateProviderProps extends CheckStateRenderProps {
    state: CheckStateProperties;
}
export declare function CheckStateProvider(props: CheckStateProviderProps): JSX.Element;
export declare function useCheckState(): CheckStateProperties;
export declare function CheckStateChild(props: CheckStateRenderProps): JSX.Element;
//# sourceMappingURL=create-check-state.d.ts.map