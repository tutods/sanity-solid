declare function useEventListener<T extends HTMLElement, K extends keyof HTMLElementEventMap>(node: T, type: K, listener: (ev: HTMLElementEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;
declare function useEventListener<T extends Window, K extends keyof WindowEventMap>(node: T, type: K, listener: (ev: WindowEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;
declare function useEventListener<T extends Document, K extends keyof DocumentEventMap>(node: T, type: K, listener: (ev: DocumentEventMap[K]) => void, options?: boolean | AddEventListenerOptions): void;
export default useEventListener;
//# sourceMappingURL=use-event-listener.d.ts.map