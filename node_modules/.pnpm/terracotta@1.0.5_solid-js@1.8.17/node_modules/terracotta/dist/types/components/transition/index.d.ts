import type { JSX } from 'solid-js';
import type { UnmountableProps } from '../../utils/create-unmountable';
import type { HeadlessPropsWithRef, ValidConstructor } from '../../utils/dynamic-prop';
import type { Prettify } from '../../utils/types';
export interface TransitionRootBaseProps {
    show: boolean;
}
export interface TransitionBaseChildProps extends UnmountableProps {
    appear?: boolean;
    enter?: string;
    enterFrom?: string;
    enterTo?: string;
    entered?: string;
    leave?: string;
    leaveFrom?: string;
    leaveTo?: string;
    beforeEnter?: () => void;
    afterEnter?: () => void;
    beforeLeave?: () => void;
    afterLeave?: () => void;
}
export type TransitionChildProps<T extends ValidConstructor = 'div'> = HeadlessPropsWithRef<T, TransitionBaseChildProps>;
export declare function TransitionChild<T extends ValidConstructor = 'div'>(props: TransitionChildProps<T>): JSX.Element;
export type TransitionProps<T extends ValidConstructor = 'div'> = Prettify<TransitionRootBaseProps & TransitionChildProps<T>>;
export declare function Transition<T extends ValidConstructor = 'div'>(props: TransitionProps<T>): JSX.Element;
//# sourceMappingURL=index.d.ts.map