import type { JSX } from 'solid-js';
import type { ToggleStateControlledOptions, ToggleStateRenderProps, ToggleStateUncontrolledOptions } from '../../states/create-toggle-state';
import type { HeadlessPropsWithRef, ValidConstructor } from '../../utils/dynamic-prop';
import type { OmitAndMerge, Prettify } from '../../utils/types';
import type { ButtonProps } from '../button';
export type ToggleControlledBaseProps = Prettify<ToggleStateControlledOptions & ToggleStateRenderProps>;
export type ToggleControlledProps<T extends ValidConstructor = 'button'> = HeadlessPropsWithRef<T, OmitAndMerge<ToggleControlledBaseProps, ButtonProps<T>>>;
export type ToggleUncontrolledBaseProps = Prettify<ToggleStateUncontrolledOptions & ToggleStateRenderProps>;
export type ToggleUncontrolledProps<T extends ValidConstructor = 'button'> = HeadlessPropsWithRef<T, OmitAndMerge<ToggleUncontrolledBaseProps, ButtonProps<T>>>;
export type ToggleProps<T extends ValidConstructor = 'button'> = ToggleControlledProps<T> | ToggleUncontrolledProps<T>;
export declare function Toggle<T extends ValidConstructor = 'button'>(props: ToggleProps<T>): JSX.Element;
//# sourceMappingURL=index.d.ts.map