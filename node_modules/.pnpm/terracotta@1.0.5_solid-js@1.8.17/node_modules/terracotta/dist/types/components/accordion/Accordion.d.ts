import type { JSX } from 'solid-js';
import type { MultipleSelectStateControlledOptions, MultipleSelectStateUncontrolledOptions, SelectStateRenderProps, SingleSelectStateControlledOptions, SingleSelectStateUncontrolledOptions } from '../../states/create-select-state';
import type { HeadlessPropsWithRef, ValidConstructor } from '../../utils/dynamic-prop';
import type { Prettify } from '../../utils/types';
export type AccordionSingleControlledBaseProps<V> = Prettify<SingleSelectStateControlledOptions<V> & SelectStateRenderProps<V>>;
export type AccordionSingleControlledProps<V, T extends ValidConstructor = 'div'> = HeadlessPropsWithRef<T, AccordionSingleControlledBaseProps<V>>;
export type AccordionSingleUncontrolledBaseProps<V> = Prettify<SingleSelectStateUncontrolledOptions<V> & SelectStateRenderProps<V>>;
export type AccordionSingleUncontrolledProps<V, T extends ValidConstructor = 'div'> = HeadlessPropsWithRef<T, AccordionSingleUncontrolledBaseProps<V>>;
export type AccordionMultipleControlledBaseProps<V> = Prettify<MultipleSelectStateControlledOptions<V> & SelectStateRenderProps<V>>;
export type AccordionMultipleControlledProps<V, T extends ValidConstructor = 'div'> = HeadlessPropsWithRef<T, AccordionMultipleControlledBaseProps<V>>;
export type AccordionMultipleUncontrolledBaseProps<V> = Prettify<MultipleSelectStateUncontrolledOptions<V> & SelectStateRenderProps<V>>;
export type AccordionMultipleUncontrolledProps<V, T extends ValidConstructor = 'div'> = HeadlessPropsWithRef<T, AccordionMultipleUncontrolledBaseProps<V>>;
export type AccordionProps<V, T extends ValidConstructor = 'div'> = AccordionSingleControlledProps<V, T> | AccordionSingleUncontrolledProps<V, T> | AccordionMultipleControlledProps<V, T> | AccordionMultipleUncontrolledProps<V, T>;
export declare function Accordion<V, T extends ValidConstructor = 'div'>(props: AccordionProps<V, T>): JSX.Element;
//# sourceMappingURL=Accordion.d.ts.map